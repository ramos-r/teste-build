{"version":3,"sources":["Componentes/Header.jsx","Componentes/Busca.jsx","Componentes/Condicional.jsx","Componentes/Card.jsx","Componentes/Home.jsx","Componentes/Footer.jsx","Componentes/Pokedex.jsx","App.jsx","serviceWorker.js","index.js"],"names":["props","children","className","type","min","max","onChange","eventoChange","onKeyPress","eventoPrincipal","placeholder","onClick","condicao","useState","valor","setValor","titulo","setTitulo","caminho","setCaminho","altImg","setAltImg","legenda","setLegenda","renderizarPokemon","pokemon","name","replace","tipos","types","map","length","id","a","fetch","res","json","classe","Condicional","isHome","src","alt","numero","evento","target","value","key","fetchPokemon","erro","alert","classes","href","Pokedex","estrutura","state","pokemons","Array","fill","componentDidMount","i","req","tiposSpan","toString","padStart","setState","this","item","Component","to","path","exact","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qVAGe,G,YAAA,SAACA,GACZ,OACI,gCACI,gDACA,6BACKA,EAAMC,a,+BCLR,G,MAAA,SAACD,GAAD,OACX,yBAAKE,UAAU,8BACX,2BAAOC,KAAK,SAASD,UAAU,QAAQE,IAAI,IAAIC,IAAI,MAAMC,SAAUN,EAAMO,aAAcC,WAAYR,EAAMS,gBAAiBC,YAAY,SACtI,4BAAQP,KAAK,SAASD,UAAU,QAAQS,QAASX,EAAMS,iBAAvD,aCNO,WAACT,GACZ,OAAIA,EAAMY,SACCZ,EAAMC,SAGN,ICAA,G,MAAA,SAACD,GAAW,IAAD,EACIa,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,OAEMF,mBAASb,EAAMgB,QAFrB,mBAEfA,EAFe,KAEPC,EAFO,OAGQJ,mBAASb,EAAMkB,SAHvB,mBAGfA,EAHe,KAGNC,EAHM,OAIMN,mBAASb,EAAMoB,QAJrB,mBAIfA,EAJe,KAIPC,EAJO,OAKQR,mBAASb,EAAMsB,SALvB,mBAKfA,EALe,KAKNC,EALM,KAOtB,SAASC,EAAkBC,GACvBR,EAAUQ,EAAQC,KAAKC,QAAQ,IAAK,MACpCR,EAAW,OAAD,OAAQM,EAAQC,KAAhB,SACVL,EAAUI,EAAQC,MAElB,IAAME,EAAQH,EAAQI,MAAMC,KAAI,SAAC3B,GAAD,OAAUA,EAAKA,KAAKuB,QAE/B,IAAjBE,EAAMG,OACNR,EACI,0BAAMrB,UAAU,SACZ,0BAAMA,UAAW0B,EAAM,IAAKA,EAAM,MAI1CL,EACI,0BAAMrB,UAAU,SACZ,0BAAMA,UAAW0B,EAAM,IAAvB,UAA+BA,EAAM,GAArC,MADJ,IAEI,0BAAM1B,UAAW0B,EAAM,IAAvB,WAAgCA,EAAM,OAxBhC,4CA8BtB,WAA4BI,GAA5B,eAAAC,EAAA,sEACsBC,MAAM,qCAAD,OAAsCF,IADjE,cACUG,EADV,gBAE0BA,EAAIC,OAF9B,OAGIZ,EAHJ,oDA9BsB,sBAkDtB,OACI,yBAAKtB,UAAS,UAAKF,EAAMqC,OAAX,UACV,kBAACC,EAAD,CAAa1B,SAAUZ,EAAMuC,QACzB,4BAAKvB,IAGT,kBAACsB,EAAD,CAAa1B,UAAWZ,EAAMuC,QAC1B,4BAAKvB,IAGT,yBAAKd,UAAU,6BACX,yBAAKsC,IAAKtB,EAASuB,IAAKrB,KAG5B,kBAACkB,EAAD,CAAa1B,UAAWZ,EAAMuC,QAC1B,uBAAGrC,UAAU,UAAS,8BAAOF,EAAM0C,UAGvC,2BAAIpB,GACJ,kBAACgB,EAAD,CAAa1B,SAAUZ,EAAMuC,QACzB,kBAAC,EAAD,CAAOhC,aAlCnB,SAAwBoC,GACpB5B,EAAS4B,EAAOC,OAAOC,QAiCsBpC,gBA9BjD,SAAuBkC,GACnB,KACS7B,EAAQ,GAAKA,EAAQ,KAAsB,UAAf6B,EAAOG,KAAoC,UAAhBH,EAAOxC,OA1CrD,oCA2CV4C,CAAajC,GAEnB,MAAOkC,GACLC,MAAMD,WChDH,aACX,OACI,0BAAM9C,UAAU,yBACZ,kBAAC,EAAD,CAAMqC,QAAQ,EAAMvB,OAAQ,oBAAkBE,QAAS,yBAA0BE,OAAQ,+BAA0BE,QAAS,2CAAyC4B,QAAS,YCH3K,G,MAAA,WACX,OACI,gCACI,6EACA,wBAAIhD,UAAU,aACV,wBAAIA,UAAU,SAAQ,gDAAtB,IAAkD,uBAAGiD,KAAK,mCAAkC,gDAC5F,wBAAIjD,UAAU,SAAQ,+CAAtB,IAAiD,uBAAGiD,KAAK,8BAA6B,2CACtF,wBAAIjD,UAAU,SAAQ,gDAAtB,IAA+C,uBAAGiD,KAAK,mCAAkC,gDACzF,wBAAIjD,UAAU,SAAQ,8CAAtB,IAAgD,uBAAGiD,KAAK,8BAA6B,2CACrF,wBAAIjD,UAAU,SAAQ,kDAAtB,IAAoD,uBAAGiD,KAAK,8BAA6B,2CACzF,wBAAIjD,UAAU,SAAQ,gDAAtB,IAAkD,uBAAGiD,KAAK,mCAAkC,gD,wCCTvFC,G,kNACjBC,UACI,4BACI,kBAAC,EAAD,CAAMd,QAAQ,EAAOF,OAAO,aAAarB,OAAO,MAAME,QAAQ,mBAAmBE,OAAO,WAAWsB,OAAO,OAAOpB,QAAQ,S,EAIjIgC,MAAQ,CACJC,SAAUC,MAAM,KAAKC,KAAK,EAAKJ,Y,EAGnCK,kB,sBAAoB,sCAAAzB,EAAA,sDACR0B,EAAI,EADI,YACDA,EAAI,EAAKL,MAAMC,SAASxB,QADvB,iCAEMG,MAAM,qCAAD,OAAsCyB,EAAI,IAFrD,cAENC,EAFM,gBAGOA,EAAIxB,OAHX,OAGNA,EAHM,OAKNR,EAAQQ,EAAKP,MAAMC,KAAI,SAAC3B,GAAD,OAAUA,EAAKA,KAAKuB,QAC7CmC,OANQ,EASRA,EADiB,IAAjBjC,EAAMG,OAEF,0BAAM7B,UAAU,SACZ,0BAAMA,UAAW0B,EAAM,IAAKA,EAAM,KAKtC,0BAAM1B,UAAU,SACZ,0BAAMA,UAAW0B,EAAM,IAAvB,UAA+BA,EAAM,GAArC,MADJ,IAEI,0BAAM1B,UAAW0B,EAAM,IAAvB,WAAgCA,EAAM,OAK5C2B,EAvBM,YAuBS,EAAKD,MAAMC,WACvBI,GACL,wBAAIb,IAAKV,EAAKJ,IACV,kBAAC,EAAD,CACIO,QAAQ,EACRvB,OAAQoB,EAAKV,KACbR,QAAO,cAASkB,EAAKV,KAAd,QACPN,OAAQgB,EAAKV,KACbgB,OAAM,WAAMN,EAAKJ,GAAG8B,WAAWC,SAAS,EAAG,MAC3CzC,QAASuC,KAKrB,EAAKG,SAAS,CAAET,aArCJ,QAC+BI,IAD/B,2D,uDA0ChB,OACI,0BAAMzD,UAAU,WACZ,2DACA,wBAAIA,UAAU,qBACT+D,KAAKX,MAAMC,SAASzB,KAAI,SAACoC,GAAD,OAAWA,W,GAzDnBC,c,eCGtB,aACX,OACI,kBAAC,IAAD,KACI,kBAAC,WAAD,KACI,kBAAC,EAAD,KACI,wBAAIjE,UAAU,eACV,4BAAI,kBAAC,IAAD,CAAMkE,GAAG,KAAI,wCACjB,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAW,6CAIhC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,WAAWE,UAAWnB,KAGtC,kBAAC,EAAD,SCXIqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3d38e3e2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/Header.css\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <header>\r\n            <h1>Pokédex React</h1>\r\n            <nav>\r\n                {props.children}\r\n            </nav>\r\n        </header>\r\n    );\r\n    \r\n}","import React from \"react\";\r\nimport \"../css/Busca.css\";\r\n\r\nexport default (props) => (\r\n    <div className=\"centralizar buscaContainer\">\r\n        <input type=\"number\" className=\"col-4\" min=\"1\" max=\"151\" onChange={props.eventoChange} onKeyPress={props.eventoPrincipal} placeholder=\"#001\"/>\r\n        <button type=\"button\" className=\"col-2\" onClick={props.eventoPrincipal}>Buscar</button>\r\n    </div>\r\n);\r\n","export default (props) => {\r\n    if (props.condicao){\r\n        return props.children;\r\n    }\r\n    else{\r\n        return \"\";\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Busca from \"./Busca\";\r\nimport Condicional from \"./Condicional\";\r\nimport \"../css/Card.css\";\r\n\r\nexport default (props) => {\r\n    const [valor, setValor] = useState(\"\");\r\n    const [titulo, setTitulo] = useState(props.titulo);\r\n    const [caminho, setCaminho] = useState(props.caminho);\r\n    const [altImg, setAltImg] = useState(props.altImg);\r\n    const [legenda, setLegenda] = useState(props.legenda);\r\n\r\n    function renderizarPokemon(pokemon) {\r\n        setTitulo(pokemon.name.replace(\"-\", \" \"));\r\n        setCaminho(`img/${pokemon.name}.png`);\r\n        setAltImg(pokemon.name);\r\n\r\n        const tipos = pokemon.types.map((type) => type.type.name);\r\n\r\n        if (tipos.length === 1) {\r\n            setLegenda(\r\n                <span className=\"tipos\">\r\n                    <span className={tipos[0]}>{tipos[0]}</span>\r\n                </span>\r\n            );\r\n        } else {\r\n            setLegenda(\r\n                <span className=\"tipos\">\r\n                    <span className={tipos[0]}>{`${tipos[0]} `}</span>|\r\n                    <span className={tipos[1]}>{` ${tipos[1]}`}</span>\r\n                </span>\r\n            );\r\n        }\r\n    }\r\n\r\n    async function fetchPokemon(id) {\r\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n        const pokemon = await res.json();\r\n        renderizarPokemon(pokemon);\r\n    }\r\n\r\n    function atualizarValor(evento) {\r\n        setValor(evento.target.value);\r\n    }\r\n\r\n    function buscarPokemon(evento) {\r\n        try {\r\n            if ((valor > 0 && valor < 152 && evento.key === \"Enter\") || evento.type === \"click\") {\r\n                fetchPokemon(valor);\r\n            }\r\n        } catch (erro) {\r\n            alert(erro);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`${props.classe} Card`}>\r\n            <Condicional condicao={props.isHome}>\r\n                <h1>{titulo}</h1>\r\n            </Condicional>\r\n            \r\n            <Condicional condicao={!props.isHome}>\r\n                <h2>{titulo}</h2>\r\n            </Condicional>\r\n            \r\n            <div className=\"container-img centralizar\">\r\n                <img src={caminho} alt={altImg}/>\r\n            </div>\r\n\r\n            <Condicional condicao={!props.isHome}>\r\n                <p className=\"numero\"><span>{props.numero}</span></p>\r\n            </Condicional>\r\n\r\n            <p>{legenda}</p>\r\n            <Condicional condicao={props.isHome}>\r\n                <Busca eventoChange={atualizarValor} eventoPrincipal={buscarPokemon} />\r\n            </Condicional>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nexport default () => {\r\n    return (\r\n        <main className=\"container centralizar\">\r\n            <Card isHome={true} titulo={\"Buscar Pokémon\"} caminho={\"img/nao-encontrado.png\"} altImg={\"Pokémon não encontrado\"} legenda={\"Busque pelos primeiros #151 Pokémons!\"} classes={\"col-6\"}/>\r\n        </main>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"../css/Footer.css\";\r\n\r\nexport default () => {\r\n    return (\r\n        <footer>\r\n            <h1>Workshop React - SENAI Suíço-Brasileira</h1>\r\n            <ul className=\"container\">\r\n                <li className=\"col-4\"><span>Paulo Henrique</span> <a href=\"https://github.com/henrique1204\"><span>Henrique1204</span></a></li>\r\n                <li className=\"col-4\"><span>Rebecca Ramos</span> <a href=\"https://github.com/ramos-r\"><span>ramos-r</span></a></li>\r\n                <li className=\"col-4\"><span>José Carlos</span> <a href=\"https://github.com/JoseCarlos69\"><span>JoseCarlos69</span></a></li>\r\n                <li className=\"col-4\"><span>Felipe Braga</span> <a href=\"https://github.com/obragaa\"><span>obragaa</span></a></li>\r\n                <li className=\"col-4\"><span>Geovanna Caserta</span> <a href=\"https://github.com/gkslima\"><span>gkslima</span></a></li>\r\n                <li className=\"col-4\"><span>Geovanne Sousa</span> <a href=\"https://github.com/henrique1204\"><span>Neutro17</span></a></li>\r\n            </ul>\r\n        </footer>\r\n    )\r\n}\r\n","import React, {Component} from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"../css/Pokedex.css\";\r\n\r\nexport default class Pokedex extends Component  {\r\n    estrutura = (\r\n        <li>\r\n            <Card isHome={false} classe=\"carregando\" titulo=\"???\" caminho=\"img/pokebola.png\" altImg=\"Pokebola\" numero=\"#???\" legenda=\"???\" />\r\n        </li>\r\n    );\r\n\r\n    state = {\r\n        pokemons: Array(151).fill(this.estrutura)\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        for(let i = 0; i < this.state.pokemons.length; i++) {\r\n            const req = await fetch(`https://pokeapi.co/api/v2/pokemon/${i + 1}`)\r\n            const json = await req.json();\r\n        \r\n            const tipos = json.types.map((type) => type.type.name);\r\n            let tiposSpan;\r\n    \r\n            if (tipos.length === 1) {\r\n                tiposSpan = (\r\n                    <span className=\"tipos\">\r\n                        <span className={tipos[0]}>{tipos[0]}</span>\r\n                    </span>\r\n                );\r\n            } else {\r\n                tiposSpan = (\r\n                    <span className=\"tipos\">\r\n                        <span className={tipos[0]}>{`${tipos[0]} `}</span>|\r\n                        <span className={tipos[1]}>{` ${tipos[1]}`}</span>\r\n                    </span>\r\n                );\r\n            }\r\n\r\n            const pokemons = [...this.state.pokemons];\r\n            pokemons[i] = (\r\n                <li key={json.id}>\r\n                    <Card\r\n                        isHome={false}\r\n                        titulo={json.name}\r\n                        caminho={`img/${json.name}.png`}\r\n                        altImg={json.name}\r\n                        numero={`#${json.id.toString().padStart(3, '0')}`}\r\n                        legenda={tiposSpan}\r\n                    />\r\n                </li>\r\n            );\r\n\r\n            this.setState({ pokemons });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"Pokedex\">\r\n                <h1>Pokedex 1º Geração</h1>\r\n                <ul className=\"centralizar lista\">\r\n                    {this.state.pokemons.map((item) => (item))}\r\n                </ul>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n","import React, {Fragment} from \"react\";\r\nimport Header from \"./Componentes/Header\";\r\nimport Home from \"./Componentes/Home\";\r\nimport Footer from \"./Componentes/Footer\";\r\nimport Pokedex from \"./Componentes/Pokedex\";\r\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom'\r\n\r\nexport default () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Fragment>\r\n                <Header>\r\n                    <ul className=\"centralizar\">\r\n                        <li><Link to=\"/\"><span>Home</span></Link></li>\r\n                        <li><Link to=\"/pokedex\"><span>Pokedex</span></Link></li>\r\n                    </ul>\r\n                </Header>\r\n                \r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home}></Route>\r\n                    <Route path=\"/pokedex\" component={Pokedex}></Route>\r\n                </Switch>\r\n\r\n                <Footer />\r\n            </Fragment>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}